// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/interfaces/dynamo.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	dynamodb "github.com/aws/aws-sdk-go/service/dynamodb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDynamodbClientInterface is a mock of DynamodbClientInterface interface.
type MockDynamodbClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDynamodbClientInterfaceMockRecorder
}

// MockDynamodbClientInterfaceMockRecorder is the mock recorder for MockDynamodbClientInterface.
type MockDynamodbClientInterfaceMockRecorder struct {
	mock *MockDynamodbClientInterface
}

// NewMockDynamodbClientInterface creates a new mock instance.
func NewMockDynamodbClientInterface(ctrl *gomock.Controller) *MockDynamodbClientInterface {
	mock := &MockDynamodbClientInterface{ctrl: ctrl}
	mock.recorder = &MockDynamodbClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDynamodbClientInterface) EXPECT() *MockDynamodbClientInterfaceMockRecorder {
	return m.recorder
}

// GetItemWithContext mocks base method.
func (m *MockDynamodbClientInterface) GetItemWithContext(ctx context.Context, input *dynamodb.GetItemInput, opts ...request.Option) (*dynamodb.GetItemOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, input}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetItemWithContext", varargs...)
	ret0, _ := ret[0].(*dynamodb.GetItemOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItemWithContext indicates an expected call of GetItemWithContext.
func (mr *MockDynamodbClientInterfaceMockRecorder) GetItemWithContext(ctx, input interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, input}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemWithContext", reflect.TypeOf((*MockDynamodbClientInterface)(nil).GetItemWithContext), varargs...)
}
