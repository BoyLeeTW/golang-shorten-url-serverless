// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/interfaces/shortened-id-provider.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDProviderInterface is a mock of IDProviderInterface interface.
type MockIDProviderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIDProviderInterfaceMockRecorder
}

// MockIDProviderInterfaceMockRecorder is the mock recorder for MockIDProviderInterface.
type MockIDProviderInterfaceMockRecorder struct {
	mock *MockIDProviderInterface
}

// NewMockIDProviderInterface creates a new mock instance.
func NewMockIDProviderInterface(ctrl *gomock.Controller) *MockIDProviderInterface {
	mock := &MockIDProviderInterface{ctrl: ctrl}
	mock.recorder = &MockIDProviderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDProviderInterface) EXPECT() *MockIDProviderInterfaceMockRecorder {
	return m.recorder
}

// GenerateID mocks base method.
func (m *MockIDProviderInterface) GenerateID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateID indicates an expected call of GenerateID.
func (mr *MockIDProviderInterfaceMockRecorder) GenerateID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateID", reflect.TypeOf((*MockIDProviderInterface)(nil).GenerateID))
}
